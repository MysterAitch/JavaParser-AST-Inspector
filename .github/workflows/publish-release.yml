name: Publish gradle release

on:
  release:
    types: [published]

jobs:
  publish-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout latest code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      # https://github.com/actions/cache/blob/master/examples.md#java---gradle
      - name: Setup build cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

#      - name: Publish artifact
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#        # The GITHUB_REF tag comes in the format 'refs/tags/xxx'.
#        # So if we split on '/' and take the 3rd value, we can get the release name.
#        run: |
#          NEW_VERSION=$(echo "${GITHUB_REF}" | cut -d "/" -f3)
#          echo "New version: ${NEW_VERSION}"
#          echo "Github username: ${GITHUB_ACTOR}"
#          ./gradlew -Pversion=${NEW_VERSION} publish


      # Doesn't include any of the cool versioning bits above.
      # Instead, relies on the version in the build.gradle file in deciding what to push to bintray.
      - name: Publish to Bintray
        env:
          bintrayUser: ${{ secrets.bintrayUsername }}
          bintrayApiKey: ${{ secrets.bintrayApiKey }}
        run: |
          NEW_VERSION=$(echo "${GITHUB_REF}" | cut -d "/" -f3)
          echo "New version: ${NEW_VERSION}"
          echo "Github username: ${GITHUB_ACTOR}"
          ./gradlew bintrayUpload
