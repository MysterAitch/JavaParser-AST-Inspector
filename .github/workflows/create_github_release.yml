on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+' # Push events to matching pattern -- updated to use regex for a semantic versioning version number

name: Create draft release (including artifact) from semantic versioning tag push

jobs:
  build:
    name: Create Release and Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Get just the tag name - https://github.community/t5/GitHub-Actions/How-to-get-just-the-tag-name/m-p/32167#M1027
      ## NOTE: Also strips the "v" from it, to give just the numbering
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}

      # First create the release, before trying to upload artifacts
      - name: Create the Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true # Create a draft release, with manual "release" to happen
          prerelease: false

      # Only try to build the project once the release has been created
      - name: Build the plugin zip # This actually builds the project (the artifact will be used later)
        run: |
          ./gradlew buildPlugin

      # Attach the file to the release
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./build/distributions/javaparser_ast_inspector-${{ steps.get_version.outputs.VERSION }}.zip
          asset_name: javaparser_ast_inspector.zip
          asset_content_type: application/zip
