plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '0.4.18'
    id "com.jfrog.bintray" version "1.8.5"
}

group 'com.github.rogerhowell'
version '0.1.1'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'com.github.javaparser', name: 'javaparser-symbol-solver-core', version: '3.15.18'
    implementation group: 'org.apache.commons', name: 'commons-text', version: '1.8'
    implementation group: 'guru.nidi', name: 'graphviz-java-all-j2v8', version: '0.14.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.13.1'
    testImplementation group: 'junit', name: 'junit', version: '4.13'
}

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    version '2020.1'
}
patchPluginXml {
    changeNotes """
      Add change notes here.<br>
      <em>most HTML tags may be used</em>"""
}


// https://github.com/bintray/gradle-bintray-plugin#readme
bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')

    configurations = ['archives'] // Upload the archives to bintray

    dryRun = false //[Default: false] Whether to run this as dry-run, without deploying
    publish = false //[Default: false] Whether version should be auto published after an upload
    override = false //[Default: false] Whether to override version artifacts already published

    //Package configuration. The plugin will use the repo and name properties to check if the package already exists. In that case, there's no need to configure the other package properties (like userOrg, desc, etc).
    pkg {
        repo = 'JavaParser-AST-Inspector'
        name = 'JavaParser-AST-Inspector'
        licenses = ['MIT']

        websiteUrl = 'https://github.com/MysterAitch/JavaParser-AST-Inspector'
        issueTrackerUrl = 'https://github.com/MysterAitch/JavaParser-AST-Inspector/issues'
        vcsUrl = 'https://github.com/MysterAitch/JavaParser-AST-Inspector.git'

        githubRepo = 'MysterAitch/JavaParser-AST-Inspector' //Optional Github repository
        githubReleaseNotesFile = 'README.md' //Optional Github readme file

        version {
            name = project.version
        }
    }
}
