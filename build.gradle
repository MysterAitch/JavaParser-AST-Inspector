plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '0.4.21'
    id "com.jfrog.bintray" version "1.8.5"
}

group 'com.github.rogerhowell'
version '0.4.3'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'com.github.javaparser', name: 'javaparser-symbol-solver-core', version: '3.15.22'
    implementation group: 'org.apache.commons', name: 'commons-text', version: '1.8'
    implementation group: 'guru.nidi', name: 'graphviz-java-all-j2v8', version: '0.16.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.3'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.13.3'
    testImplementation group: 'junit', name: 'junit', version: '4.13.1'
}

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    version '2020.1'
}
patchPluginXml {
    changeNotes """
      <h2>Changelog</h2>
        <p>Additional notes about changes in each release are available at: <a href="https://github.com/mysteraitch/javaparser-ast-inspector/releases">https://github.com/mysteraitch/javaparser-ast-inspector/releases</a></p>
        <h3>v0.4.3</h3>
        <p>Upgraded to using JavaParser v3.15.21</p>
        <h3>v0.4.2</h3>
        <p>Initial submitted release of the plugin to the Jetbrains plugin repo, using JavaParser v3.15.18</p>
        <p>Parsing via the plugin UI is feature complete, with analysis/generation/symbol resolution to come in future versions.</p>
        <p>Key highlights:</p>
        <ul>
            <li>Display of the AST produced, which can be explored (clicking on an item in the AST will highlight the relevant section of source code)</li>
            <li>Display of the parsed tokens</li>
            <li>Exporting of alternative representations of the AST (including as YAML, DOT, XML, Cypher, and others)</li>
            <li>Being able to view a log of parse attempts (including any errors, and the configuration used in the parse)</li>
        </ul>"""
}


// https://github.com/bintray/gradle-bintray-plugin#readme
bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_API_KEY')

    configurations = ['archives'] // Upload the archives to bintray

    dryRun = false //[Default: false] Whether to run this as dry-run, without deploying
    publish = false //[Default: false] Whether version should be auto published after an upload
    override = false //[Default: false] Whether to override version artifacts already published

    //Package configuration. The plugin will use the repo and name properties to check if the package already exists. In that case, there's no need to configure the other package properties (like userOrg, desc, etc).
    pkg {
        repo = 'JavaParser-AST-Inspector'
        name = 'JavaParser-AST-Inspector'
        licenses = ['MIT']

        websiteUrl = 'https://github.com/MysterAitch/JavaParser-AST-Inspector'
        issueTrackerUrl = 'https://github.com/MysterAitch/JavaParser-AST-Inspector/issues'
        vcsUrl = 'https://github.com/MysterAitch/JavaParser-AST-Inspector.git'

        githubRepo = 'MysterAitch/JavaParser-AST-Inspector' //Optional Github repository
        githubReleaseNotesFile = 'README.md' //Optional Github readme file

        version {
            name = project.version
        }
    }
}
